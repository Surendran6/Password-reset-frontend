{"version":3,"sources":["Formik/TextError.js","Formik/Input.js","Formik/FormControl.js","Components/ForgotPasswordPage.js","Components/LoginPage.js","Components/ProtectedPage.js","Components/RegisterPage.js","Components/ResetPasswordPage.js","App.js","reportWebVitals.js","index.js"],"names":["TextError","props","style","color","fontSize","paddingTop","children","Input","label","name","rest","className","htmlFor","additional","to","float","paddingBottom","id","component","FormControl","control","ForgotPasswordPage","useState","message","setMessage","error","setError","validationSchema","useHistory","Yup","email","required","onSubmit","values","onSubmitProps","a","axios","post","result","data","success","response","resetForm","initialValues","formik","type","textDecoration","LoginPage","history","password","console","log","localStorage","setItem","token","push","placeholder","ProtectedPage","flag","setFlag","content","setContent","useEffect","getItem","get","headers","Authorization","fetchData","SpinnerDotted","onClick","removeItem","class","RegisterPage","username","min","matches","confirmpassword","oneOf","ResetPasswordPage","URLToken","useParams","put","resetToken","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAUeA,MARf,SAAmBC,GACf,OACI,qBAAKC,MAAS,CAACC,MAAM,mBAAmBC,SAAS,OAAOC,WAAW,OAAnE,SACKJ,EAAMK,Y,mBCaJC,MAbf,SAAeN,GACX,IAAOO,EAAsBP,EAAtBO,MAAMC,EAAgBR,EAAhBQ,KAAQC,EAArB,YAA6BT,EAA7B,GACA,OACI,sBAAKU,UAAU,kBAAf,UACI,uBAAOC,QAAWH,EAAME,UAAU,YAAlC,SAA+CH,IAC9CP,EAAMY,YAAc,cAAC,IAAD,CAAMC,GAAG,kBAAkBZ,MAAO,CAACC,MAAM,mBAAmBY,MAAM,QAAQV,WAAY,MAAMW,cAAe,OAAQL,UAAU,QAA7H,gCACrB,cAAC,IAAD,aAAOA,UAAW,eAAeM,GAAIR,EAAMA,KAAMA,GAAUC,IAC3D,cAAC,IAAD,CAAcD,KAAMA,EAAMS,UAAalB,Q,cCDpCmB,MARf,SAAqBlB,GACjB,IAAOmB,EAAoBnB,EAApBmB,QAAYV,EAAnB,YAA2BT,EAA3B,GACA,OAAOmB,GACH,IAAK,QACD,OAAO,cAAC,EAAD,eAAWV,MC+CfW,MA9Cf,WACI,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAKMC,GAJUC,cAISC,IAAW,CAChCC,MAAQD,MAAaC,MAAM,qBAAqBC,SAAS,wBAEvDC,EAAQ,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,6DACNL,EAASG,EAATH,MADM,kBAGUM,IAAMC,KAAN,wEAAmF,CAACP,UAH9F,OAGLQ,EAHK,OAITZ,EAASY,EAAOC,KAAKC,SACrBhB,EAAWc,EAAOC,KAAKA,MALd,gDAOTb,EAAS,KAAMe,SAASF,KAAKC,SAC7BhB,EAAW,KAAMiB,SAASF,KAAKd,OARtB,QAUbS,EAAcQ,YAVD,yDAAH,wDAYd,OACI,qBAAK/B,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,uCAAd,6BACA,mBAAGA,UAAS,UAAKc,EAAO,eAAe,cAA3B,sBAAZ,SAA2EF,IAC3E,cAAC,IAAD,CAAQoB,cAvBE,CAClBb,MAAQ,IAsBwCH,iBAAoBA,EAAkBK,SAAWA,EAAzF,SAEQ,SAACY,GAAD,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaxB,QAAU,QAAQyB,KAAM,QAAQrC,MAAQ,QAAQC,KAAK,UAClE,wBAAQoC,KAAK,SAASlC,UAAU,iCAAhC,6BAKhB,uBAAMA,UAAU,QAAhB,+BAEI,cAAC,IAAD,CAAMG,GAAG,SAASZ,MAAO,CAAE4C,eAAgB,QAA3C,gCCWLC,MAjDf,WACI,MAA6BzB,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACMwB,EAAUpB,cAKVD,EAAmBE,IAAW,CAChCC,MAAQD,MAAaC,MAAM,qBAAqBC,SAAS,qBACzDkB,SAAWpB,MAAaE,SAAS,gCAE/BC,EAAQ,uCAAG,WAAOC,EAAOC,GAAd,mBAAAC,EAAA,6DACNL,EAAkBG,EAAlBH,MAAMmB,EAAYhB,EAAZgB,SADA,kBAGUb,IAAMC,KAAN,+DAA0E,CAACP,QAAMmB,aAH3F,OAGLX,EAHK,OAITY,QAAQC,IAAIb,GACZc,aAAaC,QAAQ,aAAaf,EAAOC,KAAKe,OAC9CN,EAAQO,KAAK,eANJ,kDAQT/B,EAAW,KAAMiB,SAASF,KAAKd,OARtB,QAUbS,EAAcQ,YAVD,0DAAH,wDAad,OACI,qBAAK/B,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,gCAAb,SAA8CY,IAC9C,cAAC,IAAD,CAAQoB,cAzBE,CAClBb,MAAQ,GACRmB,SAAW,IAuBqCtB,iBAAoBA,EAAkBK,SAAWA,EAAzF,SAEQ,SAACY,GAAD,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaxB,QAAU,QAAQyB,KAAM,QAAQW,YAAc,QAAQ/C,KAAK,UACxE,cAAC,EAAD,CAAaW,QAAU,QAAQyB,KAAM,WAAWW,YAAc,WAAW/C,KAAK,WAAWI,WAAa,mBACtG,wBAAQgC,KAAK,SAASlC,UAAU,iCAAhC,yBAKhB,uBAAMA,UAAU,QAAhB,mCAGI,cAAC,IAAD,CAAMG,GAAG,YAAYZ,MAAO,CAAE4C,eAAgB,QAA9C,mC,SCmBLW,MAhEf,WACI,IAAMT,EAAUpB,cAChB,EAAuBN,oBAAS,GAAhC,mBAAOoC,EAAP,KAAYC,EAAZ,KACA,EAA6BrC,oBAAS,GAAtC,mBAAOsC,EAAP,KAAeC,EAAf,KA6BA,OA5BAC,qBAAU,WACN,IAAMR,EAAQF,aAAaW,QAAQ,cADvB,4CAEZ,sBAAA5B,EAAA,sEACyBC,IAAM4B,IAAN,uEACjB,CACIC,QAAS,CACT,eAAgB,mBAChBC,cAAc,UAAD,OAAYZ,MALrC,cASIK,GAAQ,GACRE,GAAW,GAVf,4CAFY,sBAcC,OAAVP,EACCK,GAAQ,GAfA,mCAiBRQ,KAIL,IAQC,mCAEIT,EAEA,qBAAK/C,UAAU,mDAAmDT,MAAO,CAACG,WAAW,QAAQW,cAAc,SAA3G,SACI,cAACoD,EAAA,EAAD,MAGJ,mCAEIR,EAEA,sBAAKjD,UAAU,oBAAf,UACI,qBAAIA,UAAU,mBAAd,4CAAgE,uBAAhE,mCAEA,8BACA,wBAAQA,UAAU,kBAAkB0D,QAtB9B,WAClBjB,aAAakB,WAAW,cACxBT,GAAW,GACXb,EAAQO,KAAK,WAmBD,yBAIJ,sBAAK5C,UAAU,sBAAf,UACI,2FACA,wBAAQ4D,MAAM,kBAAd,SAAgC,cAAC,IAAD,CAAMzD,GAAG,SAAT,SAAkB,sBAAMZ,MAAO,CAACC,MAAM,SAApB,+BCMvDqE,MA1Df,WACI,MAA6BlD,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACMwB,EAAUpB,cAOVD,EAAmBE,IAAW,CAChC4C,SAAW5C,MAAaE,SAAS,qBAAqB2C,IAAI,EAAG,0CAC7D5C,MAAQD,MAAaC,MAAM,qBAAqBC,SAAS,qBACzDkB,SAAWpB,MACNE,SAAS,8BACT4C,QACD,iEACA,sGAEJC,gBAAkB/C,MACbgD,MAAM,CAAChD,IAAQ,YAAa,MAAO,0BAEtCG,EAAQ,uCAAG,WAAOC,GAAP,mBAAAE,EAAA,6DACNsC,EAA2BxC,EAA3BwC,SAAS3C,EAAkBG,EAAlBH,MAAMmB,EAAYhB,EAAZgB,SADT,kBAGYb,IAAMC,KAAN,kEAA6E,CAACoC,WAAS3C,QAAMmB,aAHzG,cAITD,EAAQO,KAAK,UAJJ,gDAMT/B,EAAW,KAAMiB,SAASH,OAAOf,SAAW,KAAMkB,SAASH,OAAOb,OANzD,yDAAH,sDASd,OACI,qBAAKd,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,uCAAd,sBACA,mBAAGA,UAAU,cAAb,SAA4BY,IAC5B,cAAC,IAAD,CAAQoB,cAhCE,CAClB8B,SAAW,GACX3C,MAAQ,GACRmB,SAAW,GACX2B,gBAAkB,IA4B8BjD,iBAAoBA,EAAkBK,SAAWA,EAAzF,SAEQ,SAACY,GAAD,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaxB,QAAU,QAAQyB,KAAM,OAAOW,YAAc,WAAW/C,KAAK,aAC1E,cAAC,EAAD,CAAaW,QAAU,QAAQyB,KAAM,QAAQW,YAAc,QAAQ/C,KAAK,UACxE,cAAC,EAAD,CAAaW,QAAU,QAAQyB,KAAM,WAAWW,YAAc,WAAW/C,KAAK,aAC9E,cAAC,EAAD,CAAaW,QAAU,QAAQyB,KAAM,WAAWW,YAAc,mBAAmB/C,KAAK,oBACtF,wBAAQoC,KAAK,SAASlC,UAAU,iCAAhC,4BAKhB,uBAAMA,UAAU,QAAhB,qCAGI,cAAC,IAAD,CAAMG,GAAG,SAASZ,MAAO,CAAE4C,eAAgB,QAA3C,gCCSLgC,MA7Df,WACI,MAA6BxD,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAEMqD,GADUnD,cACCoD,eAKXrD,EAAmBE,IAAW,CAChCoB,SAAWpB,MACNE,SAAS,uBACT4C,QACD,iEACA,sGAEJC,gBAAkB/C,MACbgD,MAAM,CAAChD,IAAQ,YAAa,MAAO,0BAEtCG,EAAQ,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,6DAENc,EAAYhB,EAAZgB,SAFM,kBAIYb,IAAM6C,IAAN,+EAAkFF,EAASG,YAAa,CAACjC,aAJrH,OAIHX,EAJG,OAKTZ,EAASY,EAAOC,KAAKC,SACrBhB,EAAWc,EAAOC,KAAKA,MANd,gDAQTW,QAAQC,IAAI,KAAMV,SAASF,KAAKC,QAAS,KAAMC,SAASF,KAAKA,MAC7Db,EAAS,KAAMe,SAASF,KAAKC,SAC7BhB,EAAW,KAAMiB,SAASF,KAAKA,MAVtB,QAYbL,EAAcQ,YAZD,yDAAH,wDAed,OACI,qBAAK/B,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,uCAAd,4BACA,mBAAGA,UAAS,UAAKc,EAAO,eAAe,cAA3B,sBAAZ,SAA2EF,IAC3E,+BAAOE,EAAQ,cAAC,IAAD,CAAMX,GAAI,SAASyD,MAAM,yBAAzB,+BAA6E,KAC5F,cAAC,IAAD,CAAQ5B,cAnCE,CAClBM,SAAW,GACX2B,gBAAkB,IAiC8BjD,iBAAoBA,EAAkBK,SAAWA,EAAzF,SAEQ,SAACY,GAAD,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaxB,QAAU,QAAQyB,KAAM,WAAWrC,MAAQ,WAAWC,KAAK,aACxE,cAAC,EAAD,CAAaW,QAAU,QAAQyB,KAAM,WAAWrC,MAAQ,mBAAmBC,KAAK,oBAChF,wBAAQoC,KAAK,SAASlC,UAAU,iCAAhC,yBAKhB,uBAAMA,UAAU,QAAhB,+BAGI,cAAC,IAAD,CAAMG,GAAG,SAASZ,MAAO,CAAE4C,eAAgB,QAA3C,gC,OCnCLqC,MAnBf,WACE,OACE,qBAAKxE,UAAU,MAAf,SACA,cAAC,IAAD,CAAeyE,SAAW,mBAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAAcnE,UAAYuC,IACtC,cAAC,IAAD,CAAO4B,KAAK,SAASC,OAAK,EAACpE,UAAa6B,IACxC,cAAC,IAAD,CAAOsC,KAAK,YAAYC,OAAK,EAACpE,UAAasD,IAC3C,cAAC,IAAD,CAAOa,KAAK,kBAAkBC,OAAK,EAACpE,UAAaG,IACjD,cAAC,IAAD,CAAOgE,KAAK,6BAA6BC,OAAK,EAACpE,UAAa4D,IAC5D,cAAC,IAAD,CAAOhE,GAAI,IAAX,SACE,cAAC,IAAD,CAAUA,GAAK,qBCPVyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9f201c1a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TextError(props) {\n    return (\n        <div style = {{color:\"rgb(255,0,0,0.8)\",fontSize:'15px',paddingTop:'5px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default TextError","import React from 'react'\nimport {Field,ErrorMessage} from 'formik'\nimport TextError from './TextError'\nimport {Link} from 'react-router-dom'\n\nfunction Input(props) {\n    const {label,name,...rest} = props\n    return (\n        <div className=\"mb-3 form-group\">\n            <label htmlFor = {name} className=\"text-info\">{label}</label>\n            {props.additional && <Link to='/forgotpassword' style={{color:\"rgb(255,0,0,0.8)\",float:'right',paddingTop: '5px',paddingBottom: '5px'}} className='small'>  Forgot Password?</Link>}\n            <Field className =\"form-control\" id={name} name={name} {...rest} />\n            <ErrorMessage name={name} component = {TextError} />\n        </div>\n        \n    )\n}\n\nexport default Input","import React from 'react'\nimport Input from './Input'\n\nfunction FormControl(props) {\n    const {control, ...rest} = props\n    switch(control){\n        case 'input':\n            return <Input {...rest} />\n    }\n}\n\nexport default FormControl","import {useState} from 'react'\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport {Formik,Form} from 'formik'\nimport * as Yup from 'yup'\nimport FormControl from '../Formik/FormControl'\n\nfunction ForgotPasswordPage() {\n    const [message,setMessage] = useState('');\n    const [error,setError] = useState('');\n    const history = useHistory();\n    const initialValues = {\n        email : ''\n    }\n    const validationSchema = Yup.object({\n        email : Yup.string().email('Enter valid email').required('Email is required')\n    })\n    const onSubmit = async (values,onSubmitProps) => {\n        const {email} = values\n        try{            \n            var result = await axios.post(`https://password-reset--backend.herokuapp.com/api/auth/forgotpassword`,{email})\n            setError(result.data.success)\n            setMessage(result.data.data)\n        }catch(error){\n            setError(error.response.data.success)\n            setMessage(error.response.data.error)\n        }  \n        onSubmitProps.resetForm();\n    }\n    return (\n        <div className=\"card mx-auto\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title  text-center font-heading\">Forgot Password</h5>               \n                <p className={`${error? 'text-success':'text-danger'} small text-center`}>{message}</p>\n                <Formik initialValues = {initialValues} validationSchema = {validationSchema} onSubmit= {onSubmit} >\n                    {\n                        (formik) => (\n                            <Form>\n                                <FormControl control = 'input' type= 'email' label = 'Email' name='email' />\n                                <button type='submit' className='my-4 btn btn-block btn-success'>Send Mail</button>\n                            </Form>\n                        )\n                    }\n                </Formik>\n                <span className='small'>\n                    Remember Password?                    \n                    <Link to='/login' style={{ textDecoration: 'none' }}>    Login</Link> \n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPasswordPage\n","import {useState} from 'react'\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport {Formik,Form} from 'formik'\nimport * as Yup from 'yup'\n\nimport FormControl from '../Formik/FormControl'\n\nfunction LoginPage() {\n    const [message,setMessage] = useState('');\n    const history = useHistory();\n    const initialValues = {\n        email : '',\n        password : ''\n    }\n    const validationSchema = Yup.object({\n        email : Yup.string().email('Enter valid email').required('Email is required'),\n        password : Yup.string().required('Please Enter your password')       \n    })\n    const onSubmit = async (values,onSubmitProps) => {\n        const {email,password} = values\n        try{\n            var result = await axios.post(`https://password-reset--backend.herokuapp.com/api/auth/login`,{email,password})\n            console.log(result);\n            localStorage.setItem('auth-token',result.data.token)\n            history.push('/Authorized')\n        }catch(error){\n            setMessage(error.response.data.error)\n        }  \n        onSubmitProps.resetForm();\n        \n    }\n    return (\n        <div className=\"card align\">\n            <div className=\"card-body\">\n                <p className='text-danger text-center small'>{message}</p>\n                <Formik initialValues = {initialValues} validationSchema = {validationSchema} onSubmit= {onSubmit} >\n                    {\n                        (formik) => (\n                            <Form>\n                                <FormControl control = 'input' type= 'email' placeholder = 'Email' name='email' />\n                                <FormControl control = 'input' type= 'password' placeholder = 'Password' name='password' additional = 'forgotpassword' />\n                                <button type='submit' className='my-4 btn btn-block btn-success'>Login</button>\n                            </Form>\n                        )\n                    }\n                </Formik>\n                <span className='small'>\n                    Don't have an account?  \n                    \n                    <Link to='/register' style={{ textDecoration: 'none' }}>    Register</Link> \n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","import React, { useState,useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport { SpinnerDotted } from 'spinners-react';\n\nfunction ProtectedPage() {\n    const history = useHistory();\n    const [flag,setFlag] = useState(true);\n    const [content,setContent] = useState(false)\n    useEffect(() => {\n        const token = localStorage.getItem('auth-token')\n        async function fetchData(){\n            const result = await axios.get(`https://password-reset--backend.herokuapp.com/api/private/Authorized`,\n                {\n                    headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`\n                    }\n                }\n            )\n            setFlag(false)\n            setContent(true)\n        }\n        if(token === null){\n            setFlag(false)\n        }else{\n            fetchData();\n        }\n        \n        \n    }, [])\n    \n    const logoutHandler = () => {\n        localStorage.removeItem('auth-token');\n        setContent(false)\n        history.push('/login')\n    }\n    return (\n        <>\n        {\n            flag \n            ?\n            <div className=\"d-flex align-items-center justify-content-center\" style={{paddingTop:\"150px\",paddingBottom:\"150px\"}}>\n                <SpinnerDotted /> \n            </div>\n            :\n            <>\n            {\n                content\n                ?\n                <div className='protected-wrapper'>\n                    <h1 className='protected-access'>Congrats! You have successfully<br/> \n                                                         logged in to protected route.</h1>\n                    <div>\n                    <button className='btn btn-primary' onClick={logoutHandler}>Logout</button>\n                    </div>\n                </div>\n                :\n                <div className='unauthorized-access'>\n                    <p>You aren't authorized to access to page. Login to continue</p>\n                    <button class=\"btn btn-primary\"><Link to='/login'><span style={{color:\"white\"}}>Login</span></Link></button>\n                </div>\n            }\n            </>\n        }\n        </>\n    )\n}\n\nexport default ProtectedPage\n","import {useState} from 'react'\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport {Formik,Form} from 'formik'\nimport * as Yup from 'yup'\n\nimport FormControl from '../Formik/FormControl'\n\nfunction RegisterPage() {\n    const [message,setMessage] = useState('');\n    const history = useHistory();\n    const initialValues = {\n        username : '',\n        email : '',\n        password : '',\n        confirmpassword : ''\n    }\n    const validationSchema = Yup.object({\n        username : Yup.string().required('Name is mandatory').min(3, 'Name must atleast contain 3 characters'),\n        email : Yup.string().email('Enter valid email').required('Email is required'),\n        password : Yup.string()\n            .required('Please Enter your password')\n            .matches(\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{5,}$/,\n            \"Must Contain 5 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        ),\n        confirmpassword : Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    })\n    const onSubmit = async (values) => {\n        const {username,email,password} = values\n        try{\n            const result = await axios.post(`https://password-reset--backend.herokuapp.com/api/auth/register`,{username,email,password})\n            history.push('/login')\n        }catch(error){\n            setMessage(error.response.result.message || error.response.result.error)\n        }  \n    }\n    return (\n        <div className=\"card align\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title  text-center font-heading\">Register</h5>\n                <p className='text-danger'>{message}</p>\n                <Formik initialValues = {initialValues} validationSchema = {validationSchema} onSubmit= {onSubmit} >\n                    {\n                        (formik) => (\n                            <Form>\n                                <FormControl control = 'input' type= 'text' placeholder = 'UserName' name='username' />\n                                <FormControl control = 'input' type= 'email' placeholder = 'Email' name='email' />\n                                <FormControl control = 'input' type= 'password' placeholder = 'Password' name='password' />\n                                <FormControl control = 'input' type= 'password' placeholder = 'Confirm Password' name='confirmpassword' />\n                                <button type='submit' className='my-4 btn btn-block btn-success'>Register</button>\n                            </Form>\n                        )\n                    }\n                </Formik>\n                <span className='small'>\n                    Already have an account?    \n                    \n                    <Link to='/login' style={{ textDecoration: 'none' }}>    Login</Link> \n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage\n","import {useState} from 'react'\nimport { useHistory,useParams } from 'react-router'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport {Formik,Form} from 'formik'\nimport * as Yup from 'yup'\nimport FormControl from '../Formik/FormControl'\n\nfunction ResetPasswordPage() {\n    const [message,setMessage] = useState('');\n    const [error,setError] = useState('');\n    const history = useHistory();\n    const URLToken = useParams();\n    const initialValues = {\n        password : '',\n        confirmpassword : ''\n    }\n    const validationSchema = Yup.object({\n        password : Yup.string()\n            .required('Enter your password')\n            .matches(\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        ),\n        confirmpassword : Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    })\n    const onSubmit = async (values,onSubmitProps) => {\n        \n        const {password} = values\n        try{\n            const result = await axios.put(`https://password-reset--backend.herokuapp.com/api/auth/resetpassword/${URLToken.resetToken}`,{password})\n            setError(result.data.success)\n            setMessage(result.data.data)\n        }catch(error){\n            console.log(error.response.data.success, error.response.data.data)\n            setError(error.response.data.success);\n            setMessage(error.response.data.data)\n        }\n        onSubmitProps.resetForm();\n        \n    }\n    return (\n        <div className=\"card mx-auto\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title  text-center font-heading\">Reset Password</h5>               \n                <p className={`${error? 'text-success':'text-danger'} small text-center`}>{message}</p>\n                <span>{error ? <Link to ='/login' class='small text-center mb-4'>Login to Continue</Link> : ''}</span>\n                <Formik initialValues = {initialValues} validationSchema = {validationSchema} onSubmit= {onSubmit} >\n                    {\n                        (formik) => (\n                            <Form>\n                                <FormControl control = 'input' type= 'password' label = 'Password' name='password' />\n                                <FormControl control = 'input' type= 'password' label = 'Confirm Password' name='confirmpassword' />\n                                <button type='submit' className='my-4 btn btn-block btn-success'>Reset</button>\n                            </Form>\n                        )\n                    }\n                </Formik>\n                <span className='small'>\n                    Remember Password?    \n                    \n                    <Link to='/login' style={{ textDecoration: 'none' }}>    Login</Link> \n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPasswordPage\n","import {BrowserRouter,Link,Switch,Route, Redirect} from 'react-router-dom'\nimport ForgotPasswordPage from './Components/ForgotPasswordPage';\nimport LoginPage from './Components/LoginPage';\nimport ProtectedPage from './Components/ProtectedPage';\nimport RegisterPage from './Components/RegisterPage';\nimport ResetPasswordPage from './Components/ResetPasswordPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n    <BrowserRouter basename = 'MERN-LoginSystem'>\n      <Switch>\n        <Route path='/Authorized' component= {ProtectedPage} />\n        <Route path='/login' exact component = {LoginPage} />\n        <Route path='/register' exact component = {RegisterPage} />\n        <Route path='/forgotpassword' exact component = {ForgotPasswordPage} />\n        <Route path='/resetpassword/:resetToken' exact component = {ResetPasswordPage} />\n        <Route to= '/'>\n          <Redirect to = '/login'/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}